# Default values for mongo-pod-labeler.

# Default replica count set to 1
replicaCount: 1

# Default revision history limit set to 5
revisionHistoryLimit: 5

# Namespace you wish to deploy
namespace: mongo

# How frequent you want to label the mongo pods in seconds ( Default values to set to 60 seconds )
labelUpdateFrequency: 60

# if u want to see more detailed output whats happening.( in case you want debug :D )
# Default set to false
verbose:
  enabled: false

# key=value of to match and get the mongo pods (here app=mongodb-replicaset)
# Refer the code here - https://github.com/Redmart/mongo-pod-labeler/blob/b9ba236a880d2eb5ea9e0497ecd51e2ba355bdb2/mongo-labeler.py#L43
mongoPodSelector:
  keyValuePair: "app=mongodb-replicaset"

# chart images details
image:
  repository: "hmdmph/mongo-pod-labeler"
  tag: "1.0.1-alpine"
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

imagePullSecrets: []

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
#  limits:
#    cpu: 200m
#    memory: 200Mi
#  requests:
#    cpu: 100m
#    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 85
  targetMemoryUtilizationPercentage: 85

nodeSelector: {}

tolerations: []

affinity: {}
